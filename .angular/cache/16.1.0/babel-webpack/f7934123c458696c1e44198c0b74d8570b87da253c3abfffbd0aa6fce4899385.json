{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nclass SocketService {\n  constructor(socket) {\n    this.socket = socket;\n  }\n  // emit event\n  fetchMovies() {\n    this.socket.emit('fetchMovies');\n  }\n  // listen event\n  onFetchStock() {\n    return this.socket.fromEvent('stock_update');\n  }\n}\nSocketService.ɵfac = function SocketService_Factory(t) {\n  return new (t || SocketService)(i0.ɵɵinject(i1.Socket));\n};\nSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SocketService,\n  factory: SocketService.ɵfac,\n  providedIn: 'root'\n});\nexport { SocketService };","map":{"version":3,"names":["SocketService","constructor","socket","fetchMovies","emit","onFetchStock","fromEvent","i0","ɵɵinject","i1","Socket","factory","ɵfac","providedIn"],"sources":["D:\\new project 12.9\\task-angular\\src\\app\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';  \n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SocketService {\n\tconstructor(private socket: Socket) { }\n\n\t// emit event\n\tfetchMovies() {\n\t\tthis.socket.emit('fetchMovies');\n\t} \n\n\t// listen event\n\tonFetchStock() {\n\t\treturn this.socket.fromEvent('stock_update');\n\t}\n}"],"mappings":";;AAGA,MAGaA,aAAa;EACzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAY;EAEtC;EACAC,WAAWA,CAAA;IACV,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,aAAa,CAAC;EAChC;EAEA;EACAC,YAAYA,CAAA;IACX,OAAO,IAAI,CAACH,MAAM,CAACI,SAAS,CAAC,cAAc,CAAC;EAC7C;;AAXYN,aAAa,C;mBAAbA,aAAa,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAbV,aAAa,C;SAAbA,aAAa;EAAAW,OAAA,EAAbX,aAAa,CAAAY,IAAA;EAAAC,UAAA,EAFb;AAAM;SAENb,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}