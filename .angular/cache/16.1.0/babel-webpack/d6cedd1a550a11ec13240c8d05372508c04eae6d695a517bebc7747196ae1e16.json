{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { Stock } from './stock';\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apisUrl = 'http://localhost:3456'; // URL to web api http://localhost:3456/stocks\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiService };","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","apisUrl","httpOptions","headers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\shali\\OneDrive\\Desktop\\new project shalini\\task-angular updated\\task-angular updated\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n// import { Stock } from './stock';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class ApiService {\n\n  private apisUrl = 'http://localhost:3456';  // URL to web api http://localhost:3456/stocks\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient\n    ) {\n\n     }\n\n \n\n \n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D;AAIA,MACaC,UAAU;EAQrBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPN,KAAAC,OAAO,GAAG,uBAAuB,CAAC,CAAE;IAE5C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAME;;AAZQC,UAAU,C;mBAAVA,UAAU,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVT,UAAU,C;SAAVA,UAAU;EAAAU,OAAA,EAAVV,UAAU,CAAAW,IAAA;EAAAC,UAAA,EADG;AAAM;SACnBZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}