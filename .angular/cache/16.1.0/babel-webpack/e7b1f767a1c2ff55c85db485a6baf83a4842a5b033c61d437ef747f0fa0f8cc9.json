{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MycartComponent = class MycartComponent {\n  constructor() {\n    this.totalValue = 0;\n    this.cart_data = [];\n    this.value = 0;\n    this.totalPrice = this.calculateTotalPrice();\n  }\n  ngOnInit() {\n    const data = localStorage.getItem('added_cart_data');\n    if (data !== null) {\n      this.cart_data = JSON.parse(data); // Assuming data is JSON stringified\n    }\n\n    this.totalPrice = this.cart_data.reduce((acc, val) => acc + val.price, 0);\n  }\n  calculateTotalPrice() {\n    let totalPrice = 0;\n    for (let i = 0; i < this.cart_data.length; i++) {\n      totalPrice += this.cart_data[i].price * this.cart_data[i].quantity;\n    }\n    return totalPrice;\n  }\n  increaseQuantity(index) {\n    this.cart_data[index].quantity++;\n    this.totalPrice = this.calculateTotalPrice();\n  }\n  decreaseQuantity(index) {\n    if (this.cart_data[index].quantity > 1) {\n      this.cart_data[index].quantity--;\n      this.totalPrice = this.calculateTotalPrice();\n    }\n  }\n  calculateSingleProductPrice(index) {\n    return this.cart_data[index].price * this.cart_data[index].quantity;\n  }\n  removeItems(item) {\n    const index = this.cart_data.indexOf(item);\n    if (index !== -1) {\n      this.cart_data.splice(index, 1);\n      localStorage.setItem('added_cart_data', JSON.stringify(this.cart_data));\n    }\n  }\n};\nMycartComponent = __decorate([Component({\n  selector: 'app-mycart',\n  templateUrl: './mycart.component.html',\n  styleUrls: ['./mycart.component.css']\n})], MycartComponent);\nexport { MycartComponent };","map":{"version":3,"names":["Component","MycartComponent","constructor","totalValue","cart_data","value","totalPrice","calculateTotalPrice","ngOnInit","data","localStorage","getItem","JSON","parse","reduce","acc","val","price","i","length","quantity","increaseQuantity","index","decreaseQuantity","calculateSingleProductPrice","removeItems","item","indexOf","splice","setItem","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\shali\\OneDrive\\Desktop\\new project shalini\\task-angular updated\\task-angular updated\\src\\app\\main\\mycart\\mycart.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-mycart',\n  templateUrl: './mycart.component.html',\n  styleUrls: ['./mycart.component.css']\n})\nexport class MycartComponent {\n\n  totalValue:number = 0;\n  \n  constructor() { \n  }\n \n  cart_data: any [] = []\n\n\n  value = 0;\n  ngOnInit(): void {\n\n\n    const data = localStorage.getItem('added_cart_data')\n\n    if (data !== null) {\n      this.cart_data = JSON.parse(data); // Assuming data is JSON stringified\n    }\n\n    this.totalPrice = this.cart_data.reduce((acc, val) => acc + val.price, 0);\n\n  }\n\n\n  totalPrice: number = this.calculateTotalPrice();\n\n  calculateTotalPrice(): number {\n\n    let totalPrice = 0;\n\n    for (let i = 0; i < this.cart_data.length; i++) {\n      totalPrice += this.cart_data[i].price * this.cart_data[i].quantity;\n    }\n    return totalPrice;\n  }\n  \n\n\n  increaseQuantity(index: number) {\n    this.cart_data[index].quantity++;\n    this.totalPrice = this.calculateTotalPrice();\n  }\n  \n  decreaseQuantity(index: number) {\n    if (this.cart_data[index].quantity > 1) {\n      this.cart_data[index].quantity--;\n      this.totalPrice = this.calculateTotalPrice();\n    }\n  }\n  \n\n  calculateSingleProductPrice(index: number): number {\n    return this.cart_data[index].price * this.cart_data[index].quantity;\n  }\n  \n\n  removeItems(item: any) {\n    const index = this.cart_data.indexOf(item);\n    if (index !== -1) {\n      this.cart_data.splice(index, 1);\n      \n      localStorage.setItem('added_cart_data', JSON.stringify(this.cart_data));\n    }\n  }\n  \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAI1BC,YAAA;IAFA,KAAAC,UAAU,GAAU,CAAC;IAKrB,KAAAC,SAAS,GAAW,EAAE;IAGtB,KAAAC,KAAK,GAAG,CAAC;IAeT,KAAAC,UAAU,GAAW,IAAI,CAACC,mBAAmB,EAAE;EApB/C;EAMAC,QAAQA,CAAA;IAGN,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAEpD,IAAIF,IAAI,KAAK,IAAI,EAAE;MACjB,IAAI,CAACL,SAAS,GAAGQ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC;;;IAGrC,IAAI,CAACH,UAAU,GAAG,IAAI,CAACF,SAAS,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,CAACC,KAAK,EAAE,CAAC,CAAC;EAE3E;EAKAV,mBAAmBA,CAAA;IAEjB,IAAID,UAAU,GAAG,CAAC;IAElB,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACd,SAAS,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9CZ,UAAU,IAAI,IAAI,CAACF,SAAS,CAACc,CAAC,CAAC,CAACD,KAAK,GAAG,IAAI,CAACb,SAAS,CAACc,CAAC,CAAC,CAACE,QAAQ;;IAEpE,OAAOd,UAAU;EACnB;EAIAe,gBAAgBA,CAACC,KAAa;IAC5B,IAAI,CAAClB,SAAS,CAACkB,KAAK,CAAC,CAACF,QAAQ,EAAE;IAChC,IAAI,CAACd,UAAU,GAAG,IAAI,CAACC,mBAAmB,EAAE;EAC9C;EAEAgB,gBAAgBA,CAACD,KAAa;IAC5B,IAAI,IAAI,CAAClB,SAAS,CAACkB,KAAK,CAAC,CAACF,QAAQ,GAAG,CAAC,EAAE;MACtC,IAAI,CAAChB,SAAS,CAACkB,KAAK,CAAC,CAACF,QAAQ,EAAE;MAChC,IAAI,CAACd,UAAU,GAAG,IAAI,CAACC,mBAAmB,EAAE;;EAEhD;EAGAiB,2BAA2BA,CAACF,KAAa;IACvC,OAAO,IAAI,CAAClB,SAAS,CAACkB,KAAK,CAAC,CAACL,KAAK,GAAG,IAAI,CAACb,SAAS,CAACkB,KAAK,CAAC,CAACF,QAAQ;EACrE;EAGAK,WAAWA,CAACC,IAAS;IACnB,MAAMJ,KAAK,GAAG,IAAI,CAAClB,SAAS,CAACuB,OAAO,CAACD,IAAI,CAAC;IAC1C,IAAIJ,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAAClB,SAAS,CAACwB,MAAM,CAACN,KAAK,EAAE,CAAC,CAAC;MAE/BZ,YAAY,CAACmB,OAAO,CAAC,iBAAiB,EAAEjB,IAAI,CAACkB,SAAS,CAAC,IAAI,CAAC1B,SAAS,CAAC,CAAC;;EAE3E;CAGD;AAnEYH,eAAe,GAAA8B,UAAA,EAL3B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWjC,eAAe,CAmE3B;SAnEYA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}